library(HoneyBADGER)
library(biomaRt)
devtools::install_github('JEFworks/HoneyBADGER')
library(HoneyBADGER)
library(biomaRt)
#biomart_version<-snakemake@params$mart_version
biomart_version<-"grch37.ensembl.org"
input_file<-"~/Documents/CNV_RNAseq_benchmark/results/inferCNV/input_SNU601_withref/count_matrix.txt"
input_annotations<-"~/Documents/CNV_RNAseq_benchmark/results/inferCNV/input_SNU601_withref/sample_annotation.txt"
input_ref_groups<-"~/Documents/CNV_RNAseq_benchmark/results/inferCNV/input_SNU601_withref/ref_groups.txt"
#Load count matrix and split into reference and cancer matrix
count_matrix<-fread(input_file)
library(data.table)
#Load count matrix and split into reference and cancer matrix
count_matrix<-fread(input_file)
?setGexpMats
#Load count matrix and split into reference and cancer matrix
data_matrix<-fread(input_file)
#Format into a matrix
gene_names<-data_matrix$V1
data_matrix$V1<-NULL
data_matrix<-as.matrix(data_matrix)
rownames(data_matrix)<-gene_names
data_matrix[1:4,1:4]
#Extract reference cells
annotation<-fread(input_annotations, header=FALSE)
#Read reference groups (saved in one tsv file)
ref_groups<-read.table(input_ref_groups,header=TRUE)
ref_cells <- annotation$V1[annotation$V2 %in% ref_groups$ref_groups]
#Split the count matrix into a reference and cancer matrix
ref_matrix<-ref_matrix[,ref_cells]
#Split the count matrix into a reference and cancer matrix
ref_matrix<-data_matrix[,ref_cells]
dim(ref_matrix)
cancer_matrix<-data_matrix[,colnames(data_matrix) ! in ref_cells,]
cancer_matrix<-data_matrix[,! (colnames(data_matrix) in ref_cells))]
cancer_matrix<-data_matrix[,! (colnames(data_matrix) %in% ref_cells))]
cancer_matrix<-data_matrix[,! (colnames(data_matrix) in ref_cells)]
cancer_matrix<-data_matrix[,! (colnames(data_matrix) %in% ref_cells)]
dim(cancer_matrix)
dim(ref_matrix)
#Define biomart for gene expression position
mart_obj <- useMart(biomart="ENSEMBL_MART_ENSEMBL", host=biomart_version,
dataset="hsapiens_gene_ensembl")
biomart_version<-"https://grch37.ensembl.org"
#Define biomart for gene expression position
mart_obj <- useMart(biomart="ENSEMBL_MART_ENSEMBL", host=biomart_version,
dataset="hsapiens_gene_ensembl")
#Create a new honeybadger object with the two expression matrices
hb <- new('HoneyBADGER', name='test')
hb$setGexpMats(gexp.sc.init=cancer_matrix,
gexp.ref.init=ref_matrix, mart_obj,
filter=FALSE, scale=FALSE, verbose=TRUE)
dim(cancer_matrix)
dim(ref_matrix)
str(cancer_matrix)
hb$setGexpMats(cancer_matrix, ref_matrix, mart_obj,
filter=FALSE, scale=FALSE, verbose=TRUE)
class(cancer_matrix)
as.matrix(cancer_matrix)
cancer_matrix<-as.matrix(cancer_matrix)
class(cancer_matrix)
hb$setGexpMats(cancer_matrix, ref_matrix, mart_obj,
filter=FALSE, scale=FALSE, verbose=TRUE)
#Define biomart for gene expression position (need to load presaved mart as no
#internet is available on the slurm cluster)
# mart_obj <- useMart(biomart="ENSEMBL_MART_ENSEMBL", host="https://grch37.ensembl.org",
#                     dataset="hsapiens_gene_ensembl")
saveRDS(mart_obj,file="biomart_grch37_ensemble.RDS")
getwd()
mart_obj
str(mart_obj)
devtools::install_github("seasoncloud/Alleloscope")
library(Alleloscope)
