guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type)+
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
xlab("")+ylab("")+
theme(axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
xlab("")+
theme(axis.y.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
rlang::last_trace()
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
xlab("")+
theme(axis.title.y=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
xlab("")+
theme(axis.title.x=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
ylab("")+
theme(axis.title.y=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
ylab("")+
ggtitle("")+
theme(axis.title.y=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16),
plot.title = element_text(size=18))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
ylab("")+
ggtitle("")+
theme(axis.title.y=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
#scale_y_continuous(expand=c(0,0))+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_blank(),
legend.text=element_text(size=16),
plot.title = element_text(size=18))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
ylab("")+
theme(axis.title.y=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.1))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.05))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
annot_dt$type<-"Annotation"
ggannot<-ggplot(annot_dt,aes(x=cell,y=1,fill=annot))+
geom_tile()+
scale_fill_discrete("Annotation")+
coord_flip()+
facet_grid(~type, scales = 'free', space = 'free') +
ggtitle("")+
theme(legend.title=element_text(size=16),
legend.text=element_text(size=16),
plot.title = element_text(size=18))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))
gglegend<-get_legend(ggannot)
ggannot<-ggannot+
ylab("")+
theme(axis.title.y=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
combiplot <- cowplot::plot_grid(ggdndr, ggsomy, ggannot, ncol = 3,
rel_widths = c(0.1,1,0.05),
axis='b', align = 'hw')
combiplot <- cowplot::plot_grid(combiplot,gglegend,ncol=1,
rel_heights=c(1,0.05))
ggsave(plot_path, combiplot, width = 36, height=20, units = "in")
library(depmixS4)
#Example 1
data("speed")
mod <- depmix(response = rt ~ 1, data = speed, nstates = 2,
trstart = runif(4))
fm <- fit(mod, emc=em.control(rand=FALSE))
#Multivariate data
mod <- depmix(list(rt ~ 1,corr ~ 1), data = speed, nstates = 2,
family = list(gaussian(), multinomial("identity")),
transition = ~ scale(Pacc), instart = runif(2))
fm <- fit(mod, verbose = FALSE, emc=em.control(rand=FALSE))
fm
summary(fm)
fm <- fit(mod, verbose = TRUE, emc=em.control(rand=FALSE))
summary(fm)
#Using a poisson function instead
y1 <- rpois(50,1)
y2 <- rpois(50,2)
ydf <- data.frame(y=c(y1,y2))
ydf
# fit models with 1 to 3 states
m1 <- depmix(y~1,ns=1,family=poisson(),data=ydf)
set.seed(1)
fm1 <- fit(m1)
m2 <- depmix(y~1,ns=2,family=poisson(),data=ydf)
set.seed(1)
fm2 <- fit(m2)
source("~/.active-rstudio-document", echo=TRUE)
kmeans(c(1,2,3),centers=3)
1e6==1000000
20,000^2
20000^2
models<-readRDS("~/Documents/CNV_calling_multiome/models.RDS")
tmp<-models$counts_and_theta$fitted_models$GTGATCAAGTAACATG.1
head(tmp@posterior$state)
table(tmp@posterior$state)
tmp@response
str(tmp@response)
head(tmp@response)
#Define states based on intercept
summary(tmp, which = "response")
models<-readRDS("~/Documents/CNV_calling_multiome/models.RDS")
library(depmixS4)
#Define states based on intercept
summary(tmp, which = "response")
#Define states based on intercept
response_mtx<-summary(tmp, which = "response")
loss_class <- which(response_mtx[,"Re1.(Intercept)"] == min(response_mtx[,"Re1.(Intercept)"]))
gain_class <- which(response_mtx[,"Re1.(Intercept)"] == max(response_mtx[,"Re1.(Intercept)"]))
base_class <- which(!(c(1,2,3) %in% c(loss_class, gain_class)))
loss_class
gain_class
base_class
models$counts_and_theta$predictions
pred_df<-models$counts_and_theta$predictions
pred_df<-pred_df[pred_df$cell=="GTGATCAAGTAACATG.1",]
View(pred_df)
table(pred_df$HMM_pred,pred_df$WGS_score)
table(tmp@posterior$state)
table(pred_df$HMM_pred)
FP=734-10
TN=253+262+80
TN/(TN+FP)
library(caret)
confmat <- confusionMatrix(data = pred_df$HMM_pred, reference = pred_df$WGS_score)
pred_df$HMM_pred<-as.factor(pred_df$HMM_pred)
str(pred_df)
pred_df$WGS_score<-as.factor(pred_df$WGS_score)
confmat <- confusionMatrix(data = pred_df$HMM_pred, reference = pred_df$WGS_score)
str(pred_df)
confmat
TN/(TN+FP)
models$counts_and_theta$metrics
head(models$counts_and_theta$metrics)
head(models$counts_and_theta$metrics$loss)
#Check metrics
loss_metrics<-models$counts_and_theta$metrics$loss
loss_metrics["GTGATCAAGTAACATG.1",]
confmat
library(Seurat)
?FindMarkers
?FoldChange
?depmixS4::depmix
library(copykat)
?copykat
library(infercnv)
?infercnv
getwd()
sapply(c("G","O","E","T","H","E"),function(x){LETTERS[(which(LETTERS==x)+10)%%26]})
sapply(c("S","T","R","E","E","T"),function(x){LETTERS[(which(LETTERS==x)+10)%%26]})
sapply(c("N","E","X","T"),function(x){LETTERS[(which(LETTERS==x)+10)%%26]})
sapply(c("T","U","R","N"),function(x){LETTERS[(which(LETTERS==x)+10)%%26]})
sapply(c("R","I","G","H","T"),function(x){LETTERS[(which(LETTERS==x)+10)%%26]})
sapply(c("P","O","S","S","I","B","L","E"),function(x){LETTERS[(which(LETTERS==x)+10)%%26]})
(which(LETTERS=="P")+10)
(which(LETTERS=="P")+10)%26
(which(LETTERS=="P")+10)%%26
(which(LETTERS=="P")+10)%%26+1
setNames(LETTERS[1:26],LETTERS[10:26,1:9])
setNames(LETTERS[1:26],LETTERS[c(10:26,1:9)])
data.table(a=LETTERS[1:26],b=LETTERS[10:26,1:9])
data.frame(a=LETTERS[1:26],b=LETTERS[10:26,1:9])
tmp=data.frame(a=LETTERS[1:26],b=LETTERS[c(10:26,1:9)])
View(tmp)
tmp=data.frame(a=LETTERS[1:26],b=LETTERS[c(11:26,1:10)])
sapply(c("P","O","S","S","I","B","L","E"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,which(LETTERS==x)+10)%%26)]})
sapply(c("P","O","S","S","I","B","L","E"),function(x){LETTERS[ifelse(which(LETTERS==x)+10)%%26==0,26,which(LETTERS==x)+10)%%26)]})
sapply(c("P","O","S","S","I","B","L","E"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("Y","O","U"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("S","E","E"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("S","M","A","L".),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("S","M","A","L"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("G","A","R","D","E","N","S"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("L","E","F","T"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("A","N","D"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("S","O","C","C","E","R"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("F","I","E","L","D"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("W","H","E","N","D"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("I","T","E","N","D"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("F","I","E","N","D"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("S","T","O","P","D"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("A","T","O","P","D"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("P","A","R","K","I","N","G"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
sapply(c("L","O","T","K","I","N","G"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
View(tmp)
sapply(c("T","U","R","N","S","N","G"),function(x){LETTERS[ifelse((which(LETTERS==x)+10)%%26==0,26,(which(LETTERS==x)+10)%%26)]})
10(/8)
108/8
108/4
2,5*3
2.5*3
2.5*2
42-27
getwd()
setwd("Documents/CNV_RNAseq_benchmark/code/benchmark_scrna_cnv_caller/snakemake_pipeline")
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
knitr::opts_knit$set(root.dir = 'snakemake_pipeline')
library(data.table)
library(dplyr)
library(ggplot2)
library(viridis)
library(ggpubr)
library(ggdendro)
library(RColorBrewer)
library(knitr)
theme_set(theme_bw())
#Load the files
evals_woref<-NULL
for(dataset in c("BCC06","BCC06post","MM")){
corrs<-fread(paste0("results/output_",dataset,
"/evaluation/evaluation_cnv_prediction_corr_wesautoannot.tsv"))
#Filter for comparison with ground truth
corrs<-corrs[corrs$method1 %in% c("scWGS","WGS","WES","GATK")]
corrs<-corrs[,c("method2","pearson")]
colnames(corrs)<-c("method","value")
corrs$metric<-"pearson"
corrs$dataset<-dataset
#Set negative correlation values to 0
corrs$norm_value<-corrs$value
corrs$norm_value[corrs$norm_value<0]<-0
#Remove row with scWGS/WES/WGS results
corrs<-corrs[! corrs$method %in% c("scWGS","WGS","WES","GATK"),]
evals_woref<-rbind(evals_woref,corrs)
#Add also AUC values (separate values for gain and loss)
auc<-fread(paste0("results/output_",dataset,
"/evaluation/evaluation_cnv_prediction_auc_wesautoannot.txt"))
auc$method<-method_names[auc$method]
#Get standard AUC values
auc_basic<-melt(auc[,c("method","auc_gains","auc_losses")],id.vars="method")
auc_basic<-auc_basic[,c("method","value","variable")]
colnames(auc_basic)[3]<-"metric"
auc_basic$dataset<-dataset
#Scale AUC to also range from 0-1 (set value < 0.5 to 0)
auc_basic$norm_value<-auc_basic$value
auc_basic$norm_value<-(auc_basic$norm_value-0.5)*2
auc_basic$norm_value[auc_basic$norm_value<0]<-0
evals_woref<-rbind(evals_woref,auc_basic)
#Get AUPRC and truncated AUC values
auc_others<-melt(auc[,c("method","auc_gains_trunc","aucpr_gains",
"auc_losses_trunc","aucpr_losses")],id.vars="method")
auc_others<-auc_others[,c("method","value","variable")]
colnames(auc_others)[3]<-"metric"
auc_others$dataset<-dataset
auc_others$norm_value<-auc_others$value
evals_woref<-rbind(evals_woref,auc_others)
#Add sens and spec values for F1 scores
filename<-paste0("results/output_",dataset,
"/evaluation/evaluation_cnv_prediction_f1_wesautoannot.txt")
sensspecf1<-fread(filename)
sensspecf1$method<-method_names[sensspecf1$method]
colnames(sensspecf1)[c(4,5,7,8)]<-paste0(colnames(sensspecf1)[c(4,5,7,8)],
"_f1")
sensspecf1<-melt(sensspecf1[,!c("cutoff_f1_gain","cutoff_f1_loss")],id.vars="method")
sensspecf1<-sensspecf1[,c("method","value","variable")]
colnames(sensspecf1)[3]<-"metric"
sensspecf1$dataset<-dataset
sensspecf1$norm_value<-sensspecf1$value
evals_woref<-rbind(evals_woref,sensspecf1)
}
#Load the different result files
dataset_names<-c("SNU601","NCIN87","MKN45","KATOIII",
"NUGC4","SNU638","SNU668","HGC27", "SNU16",
"MCF7","COLO320","MM","BCC06","BCC06post")
dataset_ending<-setNames(c("","","","",
"","","","", "",
"","_cnvkit","_wes","_wes","_wes"),
dataset_names)
#Vector for renaming methods (official published names)
method_names<-setNames(c("InferCNV (CNV)","InferCNV (Expr)","CaSpER",
"copyKat","SCEVAN (CNV)","SCEVAN (CNV)","SCEVAN (Expr)",
"Numbat (Expr)", "Numbat (CNV)", "CONICSmat"),
c("infercnv_cnv","infercnv_expr","casper",
"copykat","scevan_vega","scevan_cnv","scevan",
"numbat","numbat_cnv", "CONICSmat"))
#Match resources (sometimes multiple variants for one method)
mapping_resources<-data.frame(methods_full=c("InferCNV (CNV)","InferCNV (Expr)","CaSpER",
"copyKat","SCEVAN (CNV)","SCEVAN (Expr)",
"Numbat (Expr)", "Numbat (CNV)", "CONICSmat"),
methods_reduced=c("InferCNV","InferCNV","CaSpER",
"copyKat","SCEVAN","SCEVAN",
"Numbat","Numbat", "CONICSmat"))
auc
corr
corrs
auc
corrs
